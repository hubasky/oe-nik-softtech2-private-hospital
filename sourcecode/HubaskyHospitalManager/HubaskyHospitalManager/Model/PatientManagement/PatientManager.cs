///////////////////////////////////////////////////////////
//  PatientManager.cs
//  Implementation of the Class PatientManager
//  Generated by Enterprise Architect
//  Created on:      07-ápr.-2016 12:45:18
//  Original author: Owczarek Artur
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using HubaskyHospitalManager.Model.PatientManagement;
using HubaskyHospitalManager.Model.Common;
using HubaskyHospitalManager.Model.ApplicationManagement;
using System.Linq;

namespace HubaskyHospitalManager.Model.PatientManagement
{
	public class PatientManager : IPatientManagement
    {
        private List<Patient> patients;
        private ApplicationManagement.ApplicationManager appManager;

        public List<Patient> Patients
        {
            get { return patients; }
            set { patients = value; }
        }

        public ApplicationManagement.ApplicationManager AppManager
        {
            get { return appManager; }
            set { appManager = value; }
        }

		public PatientManager(){

		}

        public PatientManager(ApplicationManager appMgr)
        {
            this.AppManager = appMgr;
            patients = new List<Patient>();
            var results = AppManager.ApplicationDb.Patients.Select(m => m);
            var resultslist = results.AsEnumerable().Cast<Patient>().ToList();

            patients = (resultslist.Count == 0) ? null : resultslist;
        }
		/// 
		/// <param name="medicalRecord"></param>
		public void CloseMedicalRecord(MedicalRecord medicalRecord)
        {

		}

		/// 
		/// <param name="procedure"></param>
		public void CloseProcedure(Procedure procedure)
        {

		}

		/// 
		/// <param name="patient"></param>
		public MedicalRecord NewMedicalRecord(Patient patient)
        {

			return null;
		}

		public Patient NewPatient()
        {

			return null;
		}

		/// 
		/// <param name="patient"></param>
		public Procedure NewProcedure(Patient patient)
        {

			return null;
		}

		/// 
		/// <param name="patient"></param>
		public void UpdateMedicalRecord(Patient patient)
        {

		}

		/// 
		/// <param name="patient"></param>
		public void UpdatePatient(Patient patient)
        {

		}

		/// 
		/// <param name="procedure"></param>
		public void UpdateProcedure(Procedure procedure)
        {

		}
        
	}//end PatientManager

}//end namespace PatientManagement