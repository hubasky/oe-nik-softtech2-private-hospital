///////////////////////////////////////////////////////////
//  Procedure.cs
//  Implementation of the Class Procedure
//  Generated by Enterprise Architect
//  Created on:      07-ápr.-2016 12:45:19
//  Original author: Owczarek Artur
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using PatientManagement;
using HospitalManagement;
using InventoryManagement;
namespace PatientManagement {
	public class Procedure {

		private List<string> attachments;
		private DateTime createdTimestamp;
		private DateTime lastModifiedTimestamp;
		private string name;
		private int price;
		private PatientManagement.State state;
		private HospitalManagement.Employee responsible;
		private List<InventoryItem> inventoryUsage;

		public Procedure(){

		}

		~Procedure(){

		}

		public List<string> Attachments{
			get{
				return attachments;
			}
		}

		/// 
		/// <param name="attachment"></param>
		public void AddAttachment(File attachment){

		}

		public int Price{
			get{
				return price;
			}
			set{
				price = value;
			}
		}

		public string Name{
			get{
				return name;
			}
		}

		public Employee Responsible{
			get;
			set;
		}

		public State State{
			get;
			set;
		}

		/// 
		/// <param name="item"></param>
		/// <param name="decrement"></param>
		public int DecreaseQuantity(InventoryItem item, int decrement){

			return 0;
		}

		/// 
		/// <param name="name"></param>
		public List<InventoryItem> SearchInventory(string name){

			return null;
		}

		public DateTime CreatedTimestamp{
			get{
				return createdTimestamp;
			}
		}

		public DateTime LastModifiedTimestamp{
			get{
				return lastModifiedTimestamp;
			}
			set{
				lastModifiedTimestamp = value;
			}
		}

		public List<InventoryItem> InventoryUsage{
			get;
			set;
		}

	}//end Procedure

}//end namespace PatientManagement