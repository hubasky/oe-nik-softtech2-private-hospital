///////////////////////////////////////////////////////////
//  HospitalManager.cs
//  Implementation of the Class HospitalManager
//  Generated by Enterprise Architect
//  Created on:      07-ápr.-2016 12:45:16
//  Original author: hazaip
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using ApplicationManagement;
using HospitalManagement;
namespace HospitalManagement {
	public class HospitalManager : IManageableUnit, IManageableEmployee {

		private Hospital hospital;
		private ApplicationManagement.ApplicationManager appManager;

		public HospitalManager(){

		}

		~HospitalManager(){

		}

		/// 
		/// <param name="employee"></param>
		/// <param name="ward"></param>
		public void AddEmployee(Employee employee, Ward ward){

		}

		/// 
		/// <param name="unit"></param>
		/// <param name="parentUnit"></param>
		public void AddUnit(Unit unit, Unit parentUnit){

		}

		/// 
		/// <param name="unit"></param>
		public Unit FindParentUnit(Unit unit){

			return null;
		}

		/// 
		/// <param name="employee"></param>
		public void RemoveEmployee(Employee employee){

		}

		/// 
		/// <param name="unit"></param>
		public void RemoveUnit(Unit unit){

		}

		public void UpdateDatabase(){

		}

		/// 
		/// <param name="sourceEmployee"></param>
		/// <param name="targetEmployee"></param>
		public void UpdateEmployee(Employee sourceEmployee, Employee targetEmployee){

		}

		/// 
		/// <param name="sourceUnit"></param>
		/// <param name="targetUnit"></param>
		public void UpdateUnit(Unit sourceUnit, Unit targetUnit){

		}

		public Hospital Hospital{
			get{
				return hospital;
			}
			set{
				hospital = value;
			}
		}

		public ApplicationManager AppManager{
			get{
				return hospital;
			}
			set{
				hospital = value;
			}
		}

	}//end HospitalManager

}//end namespace HospitalManagement